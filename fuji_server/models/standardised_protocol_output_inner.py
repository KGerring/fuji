# SPDX-FileCopyrightText: 2020 PANGAEA (https://www.pangaea.de/)
#
# SPDX-License-Identifier: MIT

# coding: utf-8

from datetime import date, datetime  # noqa: F401

from fuji_server import util
from fuji_server.models.base_model_ import Model


class StandardisedProtocolOutputInner(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(
        self,
        protocol_type: str | None = None,
        auth_method: str | None = None,
        found_in: str | None = None,
        target: str | None = None,
    ):
        """StandardisedProtocolOutputInner - a model defined in Swagger

        :param protocol_type: The protocol_type of this StandardisedProtocolOutputInner.  # noqa: E501
        :type protocol_type: str
        :param auth_method: The auth_method of this StandardisedProtocolOutputInner.  # noqa: E501
        :type auth_method: str
        :param found_in: The found_in of this StandardisedProtocolOutputInner.  # noqa: E501
        :type found_in: str
        :param target: The target of this StandardisedProtocolOutputInner.  # noqa: E501
        :type target: str
        """
        self.swagger_types = {"protocol_type": str, "auth_method": str, "found_in": str, "target": str}

        self.attribute_map = {
            "protocol_type": "protocol_type",
            "auth_method": "auth_method",
            "found_in": "found_in",
            "target": "target",
        }
        self._protocol_type = protocol_type
        self._auth_method = auth_method
        self._found_in = found_in
        self._target = target

    @classmethod
    def from_dict(cls, dikt) -> "StandardisedProtocolOutputInner":
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The StandardisedProtocol_output_inner of this StandardisedProtocolOutputInner.  # noqa: E501
        :rtype: StandardisedProtocolOutputInner
        """
        return util.deserialize_model(dikt, cls)

    @property
    def protocol_type(self) -> str:
        """Gets the protocol_type of this StandardisedProtocolOutputInner.


        :return: The protocol_type of this StandardisedProtocolOutputInner.
        :rtype: str
        """
        return self._protocol_type

    @protocol_type.setter
    def protocol_type(self, protocol_type: str):
        """Sets the protocol_type of this StandardisedProtocolOutputInner.


        :param protocol_type: The protocol_type of this StandardisedProtocolOutputInner.
        :type protocol_type: str
        """

        self._protocol_type = protocol_type

    @property
    def auth_method(self) -> str:
        """Gets the auth_method of this StandardisedProtocolOutputInner.


        :return: The auth_method of this StandardisedProtocolOutputInner.
        :rtype: str
        """
        return self._auth_method

    @auth_method.setter
    def auth_method(self, auth_method: str):
        """Sets the auth_method of this StandardisedProtocolOutputInner.


        :param auth_method: The auth_method of this StandardisedProtocolOutputInner.
        :type auth_method: str
        """

        self._auth_method = auth_method

    @property
    def found_in(self) -> str:
        """Gets the found_in of this StandardisedProtocolOutputInner.


        :return: The found_in of this StandardisedProtocolOutputInner.
        :rtype: str
        """
        return self._found_in

    @found_in.setter
    def found_in(self, found_in: str):
        """Sets the found_in of this StandardisedProtocolOutputInner.


        :param found_in: The found_in of this StandardisedProtocolOutputInner.
        :type found_in: str
        """

        self._found_in = found_in

    @property
    def target(self) -> str:
        """Gets the target of this StandardisedProtocolOutputInner.


        :return: The target of this StandardisedProtocolOutputInner.
        :rtype: str
        """
        return self._target

    @target.setter
    def target(self, target: str):
        """Sets the target of this StandardisedProtocolOutputInner.


        :param target: The target of this StandardisedProtocolOutputInner.
        :type target: str
        """

        self._target = target
